dim playedSnakeMusic as uByte = 0

Dim snakeScreens(10,20) as uInteger at 25136 /' => _
{_
    {_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000000_
    },_
    {_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0011000000,_
        %0001000000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000001000,_
        %0000001100,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000000_
    },_
    {_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000110,_
        %0000000000,_
        %0111000000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000001110,_
        %0000000000,_
        %0110000000,_
        %0000000000,_
        %0000000000,_
        %0000000000_
    },_
    {_
        %0000000000,_
        %0000001100,_
        %0000000000,_
        %0001100000,_
        %0000000000,_
        %1100000000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %1000000001,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000011,_
        %0000000000,_
        %0000011000,_
        %0000000000,_
        %0011000000,_
        %0000000000_
    },_
    {_
        %0001110000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %1010000101,_
        %1010000101,_
        %1000000001,_
        %1000000001,_
        %1000000001,_
        %1000000001,_
        %1000000001,_
        %1000000001,_
        %1010000101,_
        %1010000101,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0001110000_
    },_
    {_
        %1100000011,_
        %1100000011,_
        %0000000000,_
        %0000000000,_
        %0011000000,_
        %0011001100,_
        %0000001100,_
        %0000000000,_
        %0000000000,_
        %1100000011,_
        %1100000011,_
        %0000000000,_
        %0000000000,_
        %0000001100,_
        %0011001100,_
        %0011000000,_
        %0000000000,_
        %0000000000,_
        %1100000011,_
        %1100000011_
    },_
    {_
        %0000000000,_
        %0011111100,_
        %0011111100,_
        %0000110000,_
        %0000110000,_
        %0011001100,_
        %0011001100,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0011001100,_
        %0011001100,_
        %0000110000,_
        %0000110000,_
        %0011111100,_
        %0011111100,_
        %0000000000_
    },_
    {_
        %1100000011,_
        %0000000000,_
        %0011111100,_
        %0000000000,_
        %1100110011,_
        %0000000000,_
        %0011001100,_
        %0000000000,_
        %0000000000,_
        %0010000100,_
        %0010000100,_
        %0000000000,_
        %0000000000,_
        %0011001100,_
        %0000000000,_
        %1100110011,_
        %0000000000,_
        %0011111100,_
        %0000000000,_
        %1100000011_
    },_
    {_
        %1000110001,_
        %0000000000,_
        %0001001000,_
        %0000000000,_
        %1100110011,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0010000100,_
        %0010000100,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %0000000000,_
        %1100110011,_
        %0000000000,_
        %0001001000,_
        %0000000000,_
        %1000110001_
    },_
    {_
        %1110000111,_
        %0000000000,_
        %0010000100,_
        %1000000001,_
        %1000110001,_
        %0000000000,_
        %0010000100,_
        %0010000100,_
        %1010000101,_
        %1010000101,_
        %1010000101,_
        %1010000101,_
        %0010000100,_
        %0010000100,_
        %0000000000,_
        %1000110001,_
        %1000000001,_
        %0010000100,_
        %0000000000,_
        %1110000111_
    }_
}'/

sub LoadSnakeScreen(screenNumber as uByte)

    FillRect(1,10,1,20,0)
    
    Dim tmpY as uByte
    Dim tmpB as uInteger    
    for tmpY = 1 to 20
    
        tmpB = snakeScreens(screenNumber,tmpY)

        if tmpB band 512 then SetCell(1, tmpY, 1)
        if tmpB band 256 then SetCell(2, tmpY, 1)
        if tmpB band 128 then SetCell(3, tmpY, 1)
        if tmpB band 64 then SetCell(4, tmpY, 1)
        if tmpB band 32 then SetCell(5, tmpY, 1)
        if tmpB band 16 then SetCell(6, tmpY, 1)
        if tmpB band 8 then SetCell(7, tmpY, 1)
        if tmpB band 4 then SetCell(8, tmpY, 1)
        if tmpB band 2 then SetCell(9, tmpY, 1)
        if tmpB band 1 then SetCell(10, tmpY, 1)

    next tmpY

end sub

function RunSnake(cLevel as uByte) as uByte

    if not playedSnakeMusic then

        playedSnakeMusic = 1
        PlayMusic(snakeIntroMusic, 40)

    end if

    Dim tmpX as Byte
    Dim tmpY as Byte

    Dim dead as uByte = 0

    Dim keys as string

    Dim lifes as uByte = 4
    Dim frm as uByte
    Dim score as uInteger = 0

    Dim snake(20,2) as uByte
    Dim snakeLen as uByte
    Dim snakeDir as uByte '0=arriba, 1=abajo, 2=izquierda, 3=derecha
    Dim lastX as uByte
    Dim lastY as uByte
    Dim forceRedraw as uByte = 1


    Dim foodX as uByte
    Dim foodY as uByte
    Dim foodVisible as uByte = 0
    Dim foodLeft as uByte

    HideNextTitle()
    SetScore(score)

    while lifes > 0

        FillRect(1,10,1,20,0)

        foodLeft = int(cLevel / 10) + 6
        foodVisible = 0
        
        snakeLen = 4
        snakeDir = 0

        snake(1,1) = 5
        snake(1,2) = 10

        snake(2,1) = 5
        snake(2,2) = 11

        snake(3,1) = 5
        snake(3,2) = 12

        snake(4,1) = 5
        snake(4,2) = 13

        SetLevel(cLevel)
        SetLifes(lifes)
        LoadSnakeScreen((cLevel mod 10) + 1)
        UpdateScreen()

        forceRedraw = 1

        frm = 12 - int(cLevel / 10)

        while not dead

            lastX = snake(snakeLen, 1)
            lastY = snake(snakeLen, 2)

            for tmpX = snakeLen to 1 step -1
    
                if tmpX = snakeLen then

                    lastX = snake(tmpX, 1)
                    lastY = snake(tmpX, 2)

                    SetCell(lastX, lastY, 0)

                    snake(tmpX, 1) = snake(tmpX - 1, 1) 
                    snake(tmpX, 2) = snake(tmpX - 1, 2)

                    if forceRedraw then SetCell(snake(tmpX, 1), snake(tmpX, 2), 1)

                else if tmpX = 1 then

                    if snakeDir = 0 then
                        snake(tmpX, 2) = snake(tmpX, 2) - 1
                    else if snakeDir = 1 then
                        snake(tmpX, 2) = snake(tmpX, 2) + 1
                    else if snakeDir = 2 then
                        snake(tmpX, 1) = snake(tmpX, 1) - 1
                    else if snakeDir = 3 then
                        snake(tmpX, 1) = snake(tmpX, 1) + 1
                    end if

                    if snake(tmpX, 1) > 10 or snake(tmpX, 1) < 1 or snake(tmpX, 2) > 20 or snake(tmpX, 2) < 1 then
                        dead = 1
                        exit while
                    end if

                    if screenCells(snake(tmpX, 1), snake(tmpX, 2)) then

                        if foodVisible and snake(tmpX, 1) = foodX and snake(tmpX, 2) = foodY then

                            beep 0.025, 24

                            score = score + 1
                            foodLeft = foodLeft - 1
                            if foodLeft = 0 then exit while
                            snakeLen = snakeLen + 1
                            snake(snakeLen, 1) = lastX
                            snake(snakeLen, 2) = lastY
                            SetScore(score)
                            SetCell(lastX, lastY, 1)
                            foodVisible = 0

                        else
    
                            dead = 1
                            exit while

                        end if

                    end if

                    SetCell(snake(tmpX, 1), snake(tmpX, 2), 1)

                else

                    snake(tmpX, 1) = snake(tmpX - 1, 1) 
                    snake(tmpX, 2) = snake(tmpX - 1, 2)

                    if forceRedraw then SetCell(snake(tmpX, 1), snake(tmpX, 2), 1)

                end if

            next tmpX

            UpdateScreen()

            if not foodVisible and int(rnd * 100) > (int(cLevel / 10) * 10) then

                do

                    foodX = int(rnd * 10) + 1
                    foodY = int(rnd * 20) + 1

                loop while screenCells(foodX, foodY)
                foodVisible = 1
                SetCell(foodX, foodY, 1)
    
                UpdateScreen()

            end if

            ResetFrameCounter()
                        
            while frm > Frames()

                keys = inkey$

                if keys = "o" then

                    snakeDir = 2
                    
                else if keys = "p" then

                    snakeDir = 3

                else if keys = "q" then

                    snakeDir = 0

                else if keys = "a" then

                    snakeDir = 1

                else if keys = "h" then

                    return 0

                end if

            end while

        end while

        if dead then

            lifes = lifes - 1
            Explode(snake(1,1), snake(1,2), 0)
            ShowCurtain()
            dead = 0

        else

            cLevel = cLevel + 1
            if cLevel > 99 then return 1

            if cLevel mod 10 = 0 then

                PlayMusic(snakeLevelMusic, 14)

            end if
            score = score + 10
            SetScore(score)
            ShowCurtain()
        end if

    end while

    return 0

end function