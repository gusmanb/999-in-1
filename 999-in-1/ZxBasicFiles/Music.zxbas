REM Write your ZX BASIC (Boriel's BASIC) code here

Dim musParamA as uInteger
Dim musParamB as uInteger

Dim deathMusic(46) as uInteger => { 51, 673, 48, 715, 45, 759, 42, 806, 48, 715, 45, 759, 42, 806, 40, 856, 45, 759, 42, 806, 40, 856, 38, 908, 42, 806, 40, 856, 38, 908, 36, 964, 40, 856, 38, 908, 36, 964, 33, 1023, 30, 1152, 28, 1223, 329, 1297 }
Dim winMusic(220) as uInteger => { 87, 964, 43, 964, 43, 964, 43, 964, 32, 1297, 28, 1460, 32, 1297, 87, 964, 43, 964, 43, 964, 43, 964, 48, 856, 54, 759, 48, 856, 87, 964, 43, 964, 43, 964, 48, 856, 43, 964, 41, 1023, 43, 964, 48, 856, 54, 759, 48, 856, 54, 759, 48, 856, 0, 5, 46, 908, 48, 856, 116, 715, 58, 715, 58, 715, 58, 715, 43, 964, 38, 1086, 43, 964, 116, 715, 58, 715, 58, 715, 58, 715, 65, 634, 73, 561, 65, 634, 116, 715, 58, 715, 54, 759, 98, 856, 48, 856, 43, 964, 41, 1023, 43, 964, 41, 1023, 43, 964, 41, 1023, 0, 5, 36, 1152, 41, 1023, 87, 964, 43, 964, 43, 964, 43, 964, 32, 1297, 28, 1460, 32, 1297, 87, 964, 43, 964, 43, 964, 43, 964, 48, 856, 54, 759, 48, 856, 87, 964, 43, 964, 43, 964, 48, 856, 43, 964, 41, 1023, 43, 964, 48, 856, 54, 759, 48, 856, 54, 759, 48, 856, 0, 5, 46, 908, 48, 856, 131, 634, 65, 634, 65, 634, 65, 634, 58, 715, 51, 806, 58, 715, 131, 634, 65, 634, 65, 634, 65, 634, 58, 715, 51, 806, 58, 715, 65, 634, 0, 5, 32, 1297, 36, 1152, 82, 1023, 32, 1297, 54, 759, 147, 856, 0, 5, 175, 964 }

Dim tetrisIntroMusic(100) as uInteger => { 205, 715, 0, 2, 418, 806, 0, 2, 72, 964, 0, 2, 86, 806, 0, 2, 84, 908, 0, 2, 28, 964, 0, 2, 25, 1086, 0, 2, 133, 1223, 0, 2, 95, 1642, 0, 2, 72, 964, 0, 2, 95, 806, 0, 2, 64, 1086, 0, 2, 72, 964, 0, 2, 133, 1223, 0, 2, 99, 1642, 0, 2, 107, 1460, 0, 2, 53, 1460, 0, 2, 54, 1297, 0, 2, 64, 1086, 0, 2, 57, 1223, 0, 2, 59, 1297, 0, 2, 48, 1460, 0, 2, 99, 1642, 0, 2, 95, 1642, 0, 2, 99, 1642, 0, 30 }
Dim tetrisLevelMusic(60) as uInteger => { 16, 1742, 0, 2, 15, 1297, 0, 3, 11, 1152, 0, 3, 139, 856, 0, 2, 26, 1297, 0, 2, 14, 964, 0, 3, 20, 1023, 0, 3, 156, 759, 0, 2, 14, 964, 0, 3, 27, 759, 0, 3, 24, 856, 0, 3, 30, 673, 0, 3, 27, 759, 0, 3, 24, 856, 0, 4, 219, 634, 0, 25 }

Dim arkaIntroMusic(96) as uInteger => { 8, 1642, 51, 1642, 8, 1642, 17, 1642, 12, 1086, 77, 1086, 0, 10, 15, 4434, 0, 10, 21, 3314, 0, 10, 11, 1152, 30, 1152, 12, 1086, 32, 1086, 14, 964, 28, 964, 12, 1086, 77, 1086, 0, 10, 15, 4434, 0, 10, 21, 3314, 0, 2, 15, 4434, 0, 2, 16, 4184, 0, 2, 20, 3513, 8, 1642, 51, 1642, 8, 1642, 17, 1642, 12, 1086, 77, 1086, 0, 10, 21, 3314, 0, 10, 14, 964, 21, 964, 12, 1086, 19, 1086, 11, 1152, 17, 1152, 14, 964, 21, 964, 12, 1086, 117, 1086 }
Dim arkaDeathMusic(24) as uInteger => { 61, 908, 48, 1152, 51, 1086, 38, 1460, 45, 1223, 36, 1548, 38, 1460, 30, 1847, 25, 2202, 25, 2202, 25, 2202, 25, 2202 }

Dim raceIntroMusic(42) as uInteger => { 13, 5279, 13, 5279, 27, 2624, 13, 5279, 13, 5279, 24, 2949, 13, 5279, 27, 2624, 13, 5279, 13, 5279, 24, 2949, 13, 5279, 22, 3127, 13, 5279, 18, 3947, 20, 3513, 28, 5279, 0, 18, 28, 5279, 0, 9, 56, 2624 }
Dim raceLevelMusic(14) as uInteger => { 76, 715, 138, 806, 123, 908, 116, 964, 103, 1086, 45, 1223, 50, 1086 }

Dim snakeIntroMusic(40) as uInteger => { 39, 3314, 0, 15, 54, 2624, 0, 13, 61, 2202, 0, 7, 68, 1742, 0, 9, 60, 1642, 0, 3, 58, 3314, 0, 8, 79, 2624, 0, 6, 67, 2202, 0, 5, 59, 1742, 0, 10, 66, 1460, 0, 4 }
Dim snakeLevelMusic(14) as uInteger => { 76, 715, 138, 806, 123, 908, 116, 964, 103, 1086, 45, 1223, 50, 1086 }

Dim destroyerIntroMusic(68) as uInteger => { 395, 596, 0, 7, 74, 806, 99, 596, 125, 467, 149, 388, 125, 467, 0, 7, 99, 596, 111, 528, 0, 7, 111, 528, 111, 528, 0, 7, 251, 715, 111, 528, 99, 596, 0, 7, 93, 634, 395, 596, 0, 7, 74, 806, 99, 596, 125, 467, 149, 388, 125, 467, 0, 7, 99, 596, 105, 561, 0, 7, 105, 561, 105, 561, 0, 7, 697, 596 }
Dim destroyerLevelMusic(54) as uInteger => { 400, 1297, 74, 759, 66, 856, 58, 964, 66, 856, 0, 7, 66, 856, 266, 634, 0, 7, 132, 413, 132, 413, 533, 302, 400, 1297, 74, 759, 66, 856, 58, 964, 66, 856, 0, 7, 66, 856, 266, 634, 0, 7, 132, 413, 132, 413, 132, 413, 0, 7, 177, 302, 819, 302 }

sub PlayMusic(ByRef Song() as uinteger, Length as uInteger)

    Dim poss as uInteger = 0

    while poss < Length                 'Ojo!! "esquivado" bug, si se arregla cambiar el orde de suma de poss
  
        musParamA = Song(poss)
        poss = poss + 1
        musParamB = Song(poss)
        poss = poss + 1

        if musParamA = 0 then
            pause musParamB
        else
            asm
                push hl
                ld hl, (_musParamB)
                push hl
                ld hl, (_musParamA)
                call __BEEPER
                pop hl
            end asm
        end if

    end while

end sub